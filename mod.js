// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var t="function"==typeof Object.defineProperty?Object.defineProperty:null;var r=function(){try{return t({},"x",{}),!0}catch(t){return!1}},e=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,l=n.__defineSetter__,u=n.__lookupGetter__,i=n.__lookupSetter__;var c=e,f=function(t,r,e){var c,f,y,p;if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. First argument must be an object. Value: `"+t+"`.");if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+e+"`.");if((f="value"in e)&&(u.call(t,r)||i.call(t,r)?(c=t.__proto__,t.__proto__=n,delete t[r],t[r]=e.value,t.__proto__=c):t[r]=e.value),y="get"in e,p="set"in e,f&&(y||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return y&&a&&a.call(t,r,e.get),p&&l&&l.call(t,r,e.set),t},y=r()?c:f;var p=function(t,r,e){y(t,r,{configurable:!1,enumerable:!1,writable:!1,value:e})},_="function"==typeof Math.fround?Math.fround:null;var b=function(){return"function"==typeof Symbol&&"symbol"==typeof Symbol("foo")}();var v=function(){return b&&"symbol"==typeof Symbol.toStringTag},d=Object.prototype.toString,m=d;var s=function(t){return m.call(t)},g=Object.prototype.hasOwnProperty;var j=function(t,r){return null!=t&&g.call(t,r)},w="function"==typeof Symbol?Symbol.toStringTag:"",h=j,S=w,A=d;var F=s,O=function(t){var r,e,n;if(null==t)return A.call(t);e=t[S],r=h(t,S);try{t[S]=void 0}catch(r){return A.call(t)}return n=A.call(t),r?t[S]=e:delete t[S],n},P=v()?O:F,T="function"==typeof Float32Array;var E=function(t){return T&&t instanceof Float32Array||"[object Float32Array]"===P(t)},I=Number.POSITIVE_INFINITY,M="function"==typeof Float32Array?Float32Array:null,N=E,V=I,k=M;var x="function"==typeof Float32Array?Float32Array:void 0,G=function(){throw new Error("not implemented")},C=new(function(){var t,r;if("function"!=typeof k)return!1;try{r=new k([1,3.14,-3.14,5e40]),t=N(r)&&1===r[0]&&3.140000104904175===r[1]&&-3.140000104904175===r[2]&&r[3]===V}catch(r){t=!1}return t}()?x:G)(1);var Y=_;"function"!=typeof Y&&(Y=function(t){return C[0]=t,C[0]});var q=Y,z=Math.floor;function B(t,r,e,n,o,a,l,u){var i,c,f,y,p;if(t<=0)return a;if(i=o,c=u,t<=128){for(f=0,p=0;p<t;p++)f=q(f+e[i]),a[c]=q(r+f),i+=n,c+=l;return a}return B(y=z(t/2),r,e,n,i,a,l,c),B(t-y,a[c+=(y-1)*l],e,n,i+y*n,a,l,c+l),a}function D(t,r,e,n,o,a){return t<=0?o:B(t,r,e,n,n<0?(1-t)*n:0,o,a,a<0?(1-t)*a:0)}p(D,"ndarray",B);export{D as default,B as ndarray};
//# sourceMappingURL=mod.js.map
